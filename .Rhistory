return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3 +2  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3 +2.5  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
char.censored <- char
char.censored$mibush=char.censored$perbush==-999
char.censored$perbush[char.censored$mibush]=0.5 #assume missing is 50-50 split
char.censored$ps.true <- ps.fcn(char.censored$perbush)
ggplot(char.censored,aes(x=ps.true)) + stat_ecdf(binwidth=.01)
char.censored <- char.censored
char.censored <- char
char.censored$mibush=char.censored$perbush==-999
char.censored$perbush[char.censored$mibush]=0.5 #assume missing is 50-50 split
char.censored$ps.true <- ps.fcn(char.censored$perbush)
ggplot(char.censored,aes(x=ps.true)) + stat_ecdf()
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char.censored <- char
char.censored$mibush=char.censored$perbush==-999
char.censored$perbush[char.censored$mibush]=0.5 #assume missing is 50-50 split
char.censored$ps.true <- ps.fcn(char.censored$perbush)
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
summary(char.censored$ps.true)
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + 1*exp(v_t) - (v_t+.5)^3 +2.5  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + 4*exp(v_t) - (v_t+.5)^3 +2.5  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3 +2.5  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3 +3  )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- (5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3/2   )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
v_t <- v
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3/2   )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3/2   )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .1*exp(v_t) - (v_t+.5)^3/4   )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4   )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char.censored <- char
char.censored$mibush=char.censored$perbush==-999
char.censored$perbush[char.censored$mibush]=0.5 #assume missing is 50-50 split
char.censored$ps.true <- ps.fcn(char.censored$perbush)
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
char.censored <- char.censored[runiform(nrow(char.censored)) <= char.censored$ps.true,] #remove observations via propensity score rule
selection <- nrow(char.censored)) >= char.censored$ps.true,
char.censored <- char.censored[selection,] #remove observations via propensity score rule
selection <- runif(nrow(char.censored)) >= char.censored$ps.true,
char.censored <- char.censored[selection,] #remove observations via propensity score rule
selection <- runif(nrow(char.censored)) >= char.censored$ps.true
sum(selection)
selection <- runif(nrow(char.censored)) >= char.censored$ps.true
char.censored <- char.censored[selection,] #remove observations via propensity score rule
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char.censored <- char
char.censored$mibush=char.censored$perbush==-999
char.censored$perbush[char.censored$mibush]=0.5 #assume missing is 50-50 split
char.censored$ps.true <- ps.fcn(char.censored$perbush)
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char.censored)) >= char.censored$ps.true
char.censored <- char.censored[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
#merge on unique(cbind(stateresponse,statecnt))
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char$mibush=char$perbush==-999
char$perbush[char$mibush]=0.5 #assume missing is 50-50 split
char$ps.true <- ps.fcn(char$perbush)
ggplot(char,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char.censored)) >= char$ps.true
char.censored <- char[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char$mibush=char$perbush==-999
char$perbush[char$mibush]=0.5 #assume missing is 50-50 split
char$ps.true <- ps.fcn(char$perbush)
ggplot(char,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char)) >= char$ps.true
char.censored <- char[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
ggplot(char,aes(x=ps.true)) + geom_histogram()
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))
#
char$mibush=char$perbush==-999
char$perbush[char$mibush]=0.5 #assume missing is 50-50 split
char$ps.true <- ps.fcn(char$perbush)
ggplot(char,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char)) <= char$ps.true
char.censored <- char[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
ggplot(char.censored,aes(x=ps.true)) + geom_histogram()
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char,aes(x=ps.true)) + geom_histogram()
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char,aes(x=ps.true)) + geom_histogram()
#Luis' PS generating rule
reg_censored <- lm(out_amountgive ~ treatment, data = char.censored)
summary(reg_censored)
reg_ols_comp <- lm(out_amountgive ~ treatment, data = char_res)
summary(reg_ols_comp)
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char,aes(x=ps.true)) + geom_histogram()+xlim(c(0,1))
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char,aes(x=ps.true)) + geom_histogram()+xlim(c(0,1))
#alternative to char_res: assume missing is 50-50 split
#char$mibush=char$perbush==-999
char_res$ps.true <- ps.fcn(char_res$perbush)
ggplot(char_res,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char)) <= char$ps.true
char.censored <- char_res[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char_res,aes(x=ps.true)) + geom_histogram()+xlim(c(0,1))
############################################################
### ECON 293 Homework 1
# Luis Armona and Jack Blundell
# Stanford University
# Spring 2017
# Section numbers correspond to assignment page
############################################################
# set your working directory
setwd("C:\\Users\\Jack\\Documents\\Git\\Athey ML homework 1\\AtheyMLhw1") # Jack
setwd('/home/luis/Downloads/AtheyMLhw1') #Luis
# clear things in RStudio
rm(list = ls())
# Call packages
library(ggplot2)
library(dplyr)
# set seed
set.seed(12345)
############################################################
# Load data
#let's use / instead of \\ since it should be compatible with both systems (Unix/Windows)
fname <- 'analysis/input/charitable_withdummyvariables.csv'
char <- read.csv(fname)
attach(char) # attach so don't have to call each time
### Exploratory analysis
dim(char) # 50,083 obs, 63 vars
names(char)
head(char) # Look at first few entries of each var
# Treatment
summary(treatment) # Anyone who got any of the 27 treatments (3 match x 3 match size x 3 reccomended amount)
mean(treatment) # 67% treated
# Gives at all
summary(out_gavedum)
# Giving
summary(out_amountgive) # amount given. Highly skewed
hist(out_amountgive)
hist(out_amountgive[out_amountgive<=10])
############################################################
### 1. Regression for average treatment effect
reg_ols <- lm(out_amountgive ~ treatment)
summary(reg_ols) # show results, significant at 90% but not 95% level
# Consistent with Table 4 of paper
confint(reg_ols, level=0.95) # CI
#probit regression
gave_probit <- glm(out_gavedum ~ treatment,family=binomial(link='probit'))
#convert coef to derivative
marginal.effect <- mean(dnorm(predict(gave_probit, type = "link")))*coef(gave_probit)
print
summary(gave_probit)
############################################################
### 2. Dropping some observations
# Try to find some drop of observations based on observables that changes the treatment effect
# look at some potential variables
summary(page18_39)
hist(page18_39[page18_39_missing!=1])
summary(perbush)
hist(perbush[perbush_missing!=1])
char_res <- char[ which(page18_39_missing!=1
& perbush_missing!=1), ] # drop all those with missings of key variables
#attach(char_res) # attach so don't have to call each time
char_res$drop <- 0 # variable telling us to drop or not
# Make threshold rule for dropping (alternatively do with random variable)
char_res$thres <- perbush #+ 0.1*(1+perbush)^2 - 0.1*page18_39*perbush #- page18_39 - page18_39^2 + perbush^2
summary(char_res$thres)
char_res$drop[char_res$thres <= 0.5] <- 1
mean(char_res$drop) # drop 23 % of obs
char_res_d <- char_res[which(char_res$drop == 0),]
print(marginal.effect)
summary(page18_39)
hist(page18_39[page18_39_missing!=1])
summary(perbush)
hist(perbush[perbush_missing!=1])
char_res <- char[ which(page18_39_missing!=1
& perbush_missing!=1), ] # drop all those with missings of key variables
detach(char)
attach(char_res) # attach so don't have to call each time
############################################################
### ECON 293 Homework 1
# Luis Armona and Jack Blundell
# Stanford University
# Spring 2017
# Section numbers correspond to assignment page
############################################################
# set your working directory
setwd("C:\\Users\\Jack\\Documents\\Git\\Athey ML homework 1\\AtheyMLhw1") # Jack
setwd('/home/luis/Downloads/AtheyMLhw1') #Luis
# clear things in RStudio
rm(list = ls())
# Call packages
library(ggplot2)
library(dplyr)
# set seed
set.seed(12345)
############################################################
# Load data
#let's use / instead of \\ since it should be compatible with both systems (Unix/Windows)
fname <- 'analysis/input/charitable_withdummyvariables.csv'
char <- read.csv(fname)
attach(char) # attach so don't have to call each time
### Exploratory analysis
dim(char) # 50,083 obs, 63 vars
names(char)
head(char) # Look at first few entries of each var
# Treatment
summary(treatment) # Anyone who got any of the 27 treatments (3 match x 3 match size x 3 reccomended amount)
mean(treatment) # 67% treated
# Gives at all
summary(out_gavedum)
# Giving
summary(out_amountgive) # amount given. Highly skewed
hist(out_amountgive)
hist(out_amountgive[out_amountgive<=10])
############################################################
### 1. Regression for average treatment effect
reg_ols <- lm(out_amountgive ~ treatment)
summary(reg_ols) # show results, significant at 90% but not 95% level
# Consistent with Table 4 of paper
confint(reg_ols, level=0.95) # CI
#probit regression
gave_probit <- glm(out_gavedum ~ treatment,family=binomial(link='probit'))
#convert coef to derivative
marginal.effect <- mean(dnorm(predict(gave_probit, type = "link")))*coef(gave_probit)
print(marginal.effect)
############################################################
### 2. Dropping some observations
# Try to find some drop of observations based on observables that changes the treatment effect
# look at some potential variables
summary(page18_39)
hist(page18_39[page18_39_missing!=1])
summary(perbush)
hist(perbush[perbush_missing!=1])
char_res <- char[ which(page18_39_missing!=1
& perbush_missing!=1), ] # drop all those with missings of key variables
detach(char)
attach(char_res) # attach so don't have to call each time
detach(char)
?detach
detach()
detach()
detach()
detach()
detach()
detach()
detach()
detach()
detach()
?attach
char_res$thres <- perbush #+ 0.1*(1+perbush)^2 - 0.1*page18_39*perbush #- page18_39 - page18_39^2 + perbush^2
attach(char_res) # attach so don't have to call each time
char_res$drop <- 0 # variable telling us to drop or not
char_res$thres <- perbush #+ 0.1*(1+perbush)^2 - 0.1*page18_39*perbush #- page18_39 - page18_39^2 + perbush^2
summary(char_res$thres)
char_res$drop[char_res$thres <= 0.5] <- 1
mean(char_res$drop) # drop 23 % of obs
char_res_d <- char_res[which(char_res$drop == 0),]
states <- char[state50one==1,]
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))#a plot of the function
#alternative to char_res: assume missing is 50-50 split
#char$mibush=char$perbush==-999
#char$perbush[char$mibush]=.5
char_res$ps.true <- ps.fcn(char_res$perbush)
ggplot(char_res,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char)) <= char$ps.true
char.censored <- char_res[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char_res,aes(x=ps.true)) + geom_histogram()+xlim(c(0,1))
############################################################
### ECON 293 Homework 1
# Luis Armona and Jack Blundell
# Stanford University
# Spring 2017
# Section numbers correspond to assignment page
############################################################
# set your working directory
setwd("C:\\Users\\Jack\\Documents\\Git\\Athey ML homework 1\\AtheyMLhw1") # Jack
setwd('/home/luis/Downloads/AtheyMLhw1') #Luis
# clear things in RStudio
rm(list = ls())
# Call packages
library(ggplot2)
library(dplyr)
# set seed
set.seed(12345)
############################################################
# Load data
#let's use / instead of \\ since it should be compatible with both systems (Unix/Windows)
fname <- 'analysis/input/charitable_withdummyvariables.csv'
char <- read.csv(fname)
attach(char) # attach so don't have to call each time
### Exploratory analysis
dim(char) # 50,083 obs, 63 vars
names(char)
head(char) # Look at first few entries of each var
# Treatment
summary(treatment) # Anyone who got any of the 27 treatments (3 match x 3 match size x 3 reccomended amount)
mean(treatment) # 67% treated
# Gives at all
summary(out_gavedum)
# Giving
summary(out_amountgive) # amount given. Highly skewed
hist(out_amountgive)
hist(out_amountgive[out_amountgive<=10])
############################################################
### 1. Regression for average treatment effect
reg_ols <- lm(out_amountgive ~ treatment)
summary(reg_ols) # show results, significant at 90% but not 95% level
# Consistent with Table 4 of paper
confint(reg_ols, level=0.95) # CI
#probit regression
gave_probit <- glm(out_gavedum ~ treatment,family=binomial(link='probit'))
#convert coef to derivative
marginal.effect <- mean(dnorm(predict(gave_probit, type = "link")))*coef(gave_probit)
print(marginal.effect)
############################################################
### 2. Dropping some observations
# Try to find some drop of observations based on observables that changes the treatment effect
# look at some potential variables
summary(page18_39)
hist(page18_39[page18_39_missing!=1])
summary(perbush)
hist(perbush[perbush_missing!=1])
char_res <- char[ which(page18_39_missing!=1
& perbush_missing!=1), ] # drop all those with missings of key variables
detach(char)
attach(char_res) # attach so don't have to call each time
char_res$drop <- 0 # variable telling us to drop or not
# Make threshold rule for dropping (alternatively do with random variable)
char_res$thres <- perbush #+ 0.1*(1+perbush)^2 - 0.1*page18_39*perbush #- page18_39 - page18_39^2 + perbush^2
summary(char_res$thres)
char_res$drop[char_res$thres <= 0.5] <- 1
mean(char_res$drop) # drop 23 % of obs
char_res_d <- char_res[which(char_res$drop == 0),]
ps.fcn <- function(v,lb=min(v),ub=max(v)){
v_t <- (v - lb)/(ub-lb) #standardize to [0,1] interval
p<- ((5*acos(v_t))*atan(v_t^2)  + .5*exp(v_t) - (v_t+.5)^3/4  +1 )/4
return(p)
}
#story to accompany this fcn: ACLU wants to help those in trouble in "red states" but do not
#feel they can make a difference in really, really red states so target donors less often
plot(seq(0,1,.001),ps.fcn(seq(0,1,.001),0))#a plot of the function
#alternative to char_res: assume missing is 50-50 split
#char$mibush=char$perbush==-999
#char$perbush[char$mibush]=.5
char_res$ps.true <- ps.fcn(char_res$perbush)
ggplot(char_res,aes(x=ps.true)) + geom_histogram()
set.seed(21)
selection <- runif(nrow(char)) <= char$ps.true
char.censored <- char_res[selection,] #remove observations via propensity score rule
ggplot(char.censored,aes(x=ps.true)) + geom_histogram() +xlim(c(0,1))
ggplot(char_res,aes(x=ps.true)) + geom_histogram()+xlim(c(0,1))
plot(x)
